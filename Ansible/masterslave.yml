# MASTER
---
- name: Master
  hosts: master
  vars:
    mysql_root_password: password
    slave_password: slave
  become: yes
  tasks:
    - name: Get update
      apt:
        update_cache: yes

    - name: Install MYSQL Server
      apt:
        name: mysql-server
        update_cache: yes
        cache_valid_time: 3600
        state: present

    - name: Install pip
      apt:
        name: python3-pip
        update_cache: yes
        state: present

    - name: Install python
      pip:
        name:
          - PyMySQL
        state: present
        executable: pip3

    - name: start up the mysql service
      shell:
        cmd: service mysql start

    - name: ensure mysql is enabled to run on startup
      service:
        name: mysql
        state: started
        enabled: yes

    - name: update mysql root password for root account
      mysql_user:
        name: root
        login_unix_socket: /var/run/mysqld/mysqld.sock
        host: 'localhost'
        password: "{{ mysql_root_password }}"
        priv: "*.*:ALL,GRANT"

    - name: Create slave user
      mysql_user:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        name: slave
        password: "{{ slave_password }}"
        encrypted: no
        host: "{{ slave_internal_ip }}"
        priv: "*.*:REPLICATION SLAVE"
        state: present

    - name: Fix slave credentials
      shell:
        cmd: mysql --user=root --password='{{ mysql_root_password }}' mysql --execute="ALTER USER 'slave'@'"{{ slave_internal_ip }}"' IDENTIFIED WITH mysql_native_password BY '"{{ slave_password }}"'";

    - name: Reload privilege tables
      shell:
        cmd: mysql --user=root --password='{{ mysql_root_password }}' mysql --execute="FLUSH PRIVILEGES";
      changed_when: False

    - name: Clone a repo spring-petclinic-rest
      ansible.builtin.git:
        repo: https://github.com/spring-petclinic/spring-petclinic-rest.git
        dest: ./spring-petclinic-rest
        force: yes

    - name: Fix petclinic sql scripts
      shell:
        cmd: sed -i "s/GRANT ALL PRIVILEGES ON petclinic.* TO pc@localhost IDENTIFIED BY 'pc';//g" ./initDB.sql
        chdir: ./spring-petclinic-rest/src/main/resources/db/mysql

    - name: Bind address changing (mysqld.cnf)
      shell: sed -i "s/^bind-address\s*\=\s*127\.0\.0\.1$/bind-address\=0.0.0.0/g" /etc/mysql/mysql.conf.d/mysqld.cnf

    - name: Log_bin (mysqld.cnf)
      shell: sed -i 's/^#\s*log_bin\s*=\s*\/var\/log\/mysql\/mysql-bin\.log$/log_bin=\/var\/log\/mysql\/mysql-bin.log/g' /etc/mysql/mysql.conf.d/mysqld.cnf

    - name: Binlog_do_db (mysqld.cnf)
      shell: sed -i 's/^#\s*binlog_do_db\s*=\s*include_database_name$/binlog_do_db=petclinic/g' /etc/mysql/mysql.conf.d/mysqld.cnf

    - name: Server ID changing (mysqld.cnf)
      shell: sed -i 's/^#\s*server-id\s*=\s*1$/server-id=1/g' /etc/mysql/mysql.conf.d/mysqld.cnf

    - name: Create tables
      mysql_db:
        name: petclinic
        login_user: root
        login_password: "{{ mysql_root_password }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock
        state: import
        target: ./spring-petclinic-rest/src/main/resources/db/mysql/initDB.sql

    - name: Import data
      mysql_db:
        name: petclinic
        login_user: root
        login_password: "{{ mysql_root_password }}"
        state: import
        target: ./spring-petclinic-rest/src/main/resources/db/mysql/populateDB.sql

    - name: create petclinic user
      mysql_user:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        name: pc
        password: petclinic
        host: "{{ item }}"
        priv: "*.*:ALL,GRANT"
        state: present
      loop:
        - "%"
        - "localhost"

    - name: Reload privilege tables
      shell:
        cmd: mysql --user=root --password='{{ mysql_root_password }}' mysql --execute="FLUSH PRIVILEGES";
      changed_when: False

    - name: Dump db
      shell: mysqldump --user=root --password='{{ mysql_root_password }}' petclinic > ./petclinic.sql

    - name: Fetch database file
      run_once: yes
      fetch:
        src: petclinic.sql
        dest: "./petclinic.sql"
        flat: yes

    - name: Restart the MySQL service
      service:
        name: mysql
        enabled: yes
        state: restarted

    - name: Database setup
      command: mysql --user=root --password='password' --execute="SET @@GLOBAL.ENFORCE_GTID_CONSISTENCY = WARN;SET @@GLOBAL.ENFORCE_GTID_CONSISTENCY = ON;SET @@GLOBAL.GTID_MODE = OFF_PERMISSIVE;SET @@GLOBAL.GTID_MODE = ON_PERMISSIVE;SET @@GLOBAL.GTID_MODE = ON;"

#----------------------------------------------------
# SLAVE

- name: slave
  hosts: slave
  become: yes
  vars:
    slave_password: slave
  tasks:
    - name: Get update
      apt:
        update_cache: yes

    - name: Install MYSQL Server
      apt:
        name: mysql-server
        update_cache: yes
        cache_valid_time: 3600
        state: present

    - name: Copy database file
      copy:
        src: ./petclinic.sql
        dest: petclinic.sql

    - name: init database
      command: >
        mysql 
        --execute="CREATE DATABASE petclinic;
                   CREATE USER 'pc'@'%' IDENTIFIED BY 'petclinic';
                   GRANT ALL PRIVILEGES ON petclinic.* TO 'pc'@'%';"

    - name: load sql file
      shell: mysql petclinic < petclinic.sql

    - name: Sed bind address
      shell: sed -i "s/^bind-address\s*\=\s*127\.0\.0\.1$/bind-address\=0.0.0.0/g" /etc/mysql/mysql.conf.d/mysqld.cnf

    - name: Sed server id
      shell: sudo sed -i 's/^#\s*server-id\s*=\s*1$/server-id=2/g' /etc/mysql/mysql.conf.d/mysqld.cnf

    - name: Sed log_bin
      shell: sudo sed -i 's/^#\s*log_bin\s*=\s*\/var\/log\/mysql\/mysql-bin\.log$/log_bin=\/var\/log\/mysql\/mysql-bin.log/g' /etc/mysql/mysql.conf.d/mysqld.cnf

    - name: Sed binlog_do_db
      shell: sudo sed -i 's/^#\s*binlog_do_db\s*=\s*include_database_name$/binlog_do_db=petclinic/g' /etc/mysql/mysql.conf.d/mysqld.cnf

    - name: Sed bin log ignore
      shell: sudo sed -i 's/^#\s*binlog_ignore_db\s*=\s*include_database_name$/relay-log=\/var\/log\/mysql\/mysql-relay-bin\.log/g' /etc/mysql/mysql.conf.d/mysqld.cnf

    - name: Restart the MySQL service
      service:
        name: mysql
        enabled: yes
        state: restarted

    - name: init database
      command: >
        mysql
        --execute="SET @@GLOBAL.ENFORCE_GTID_CONSISTENCY = WARN;
                   SET @@GLOBAL.ENFORCE_GTID_CONSISTENCY = ON;
                   SET @@GLOBAL.GTID_MODE = OFF_PERMISSIVE;
                   SET @@GLOBAL.GTID_MODE = ON_PERMISSIVE;
                   SET @@GLOBAL.GTID_MODE = ON;

                   CHANGE REPLICATION SOURCE TO
                   SOURCE_HOST='{{ master_internal_ip }}',
                   SOURCE_USER='slave',
                   SOURCE_PASSWORD='{{ slave_password }}',
                   SOURCE_LOG_FILE='mysql-bin.000001';

                   CHANGE MASTER TO MASTER_AUTO_POSITION = 1;

                   START REPLICA;"
