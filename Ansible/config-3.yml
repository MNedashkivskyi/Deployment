---
- import_playbook: masterslave.yml

- name: Build Backend1
  hosts: backend1
  become: yes
  tasks:
    - name: Get update
      apt:
        update_cache: yes

    - name: Install jdk
      apt:
        name: openjdk-11-jdk
        update_cache: yes

    - name: Install maven
      apt:
        name: maven
        state: present
        update_cache: yes
        cache_valid_time: 3600

    - name: Clone repository
      git:
        repo: https://github.com/spring-petclinic/spring-petclinic-rest.git
        dest: ./spring-petclinic-rest
        force: yes
    
    - name: Set backend1 port
      shell: sed -i "s/server.port=..../server.port="{{ backend1_port }}"/" ./spring-petclinic-rest/src/main/resources/application.properties

    - name: Change into MySQL DB
      shell: sed -i 's/=hsqldb/=mysql/' ./spring-petclinic-rest/src/main/resources/application.properties

    - name: Set IP adress of DB
      shell: sed -i "s/localhost/{{ master_internal_ip }}/" ./spring-petclinic-rest/src/main/resources/application-mysql.properties

    - name: Start application
      shell: nohup mvn spring-boot:run >/dev/null 2>&1 > log.out &
      args:
        chdir: ./spring-petclinic-rest


- name: Build Backend2
  hosts: backend2
  become: yes
  tasks:
    - name: Get update
      apt:
        update_cache: yes

    - name: Install jdk
      apt:
        name: openjdk-11-jdk
        update_cache: yes

    - name: Install maven
      apt:
        name: maven
        state: present
        update_cache: yes
        cache_valid_time: 3600

    - name: Clone repository
      git:
        repo: https://github.com/spring-petclinic/spring-petclinic-rest.git
        dest: ./spring-petclinic-rest
        force: yes
    
    - name: Set backend2 port
      shell: sed -i "s/server.port=..../server.port="{{ backend2_port }}"/" ./spring-petclinic-rest/src/main/resources/application.properties

    - name: Change into MySQL DB
      shell: sed -i 's/=hsqldb/=mysql/' ./spring-petclinic-rest/src/main/resources/application.properties

    - name: Set IP adress of DB
      shell: sed -i "s/localhost/{{ master_internal_ip }}/" ./spring-petclinic-rest/src/main/resources/application-mysql.properties

    - name: Start application
      shell: nohup mvn spring-boot:run >/dev/null 2>&1 > log.out &
      args:
        chdir: ./spring-petclinic-rest


- name: Build Frontend
  hosts: frontend
  become: yes
  tasks:
    - name: Get update
      apt:
        update_cache: yes
    
    - name: Install nginx
      apt:
        name: nginx

    - name: Install npm
      apt:
        name: npm
        update_cache: yes

    - name: Install angular
      npm:
        name: '@angular/cli@11.0.7'
        global: yes
        state: present
    
    - name: Install n
      npm:
        name: n
        global: yes

    - name: Change node version
      shell: n 12
    
    - name: Set path to node
      shell: PATH="$PATH"

    - name: Clone repository
      git:
        repo: https://github.com/spring-petclinic/spring-petclinic-angular.git
        dest: ./spring-petclinic-angular
        force: yes
    
    - name: Change rest_api_url
      shell: sed -i "s/^.*REST_API_URL{{ ":" }} .*$/  REST_API_URL{{ ":" }} 'http:\/\/"{{ frontend_ip }}":80\/petclinic\/api\/'/" ./spring-petclinic-angular/src/environments/environment.ts

    - name: Install angular in project
      shell:
        cmd: npm i --save-dev @angular/cli@11.0.7
        chdir: ./spring-petclinic-angular
    
    - name: Install dependencies
      shell:
        cmd: npm i
        chdir: ./spring-petclinic-angular

    - name: Build frontend
      shell:
        cmd: ng build --base-href=/petclinic/ --deploy-url=/petclinic/
        chdir: ./spring-petclinic-angular

    - name: Create directory for build files
      file:
        path: /usr/share/nginx/html/petclinic
        state: directory
    
    - name: Copy build files into created directory
      shell: 
        cmd: cp -R dist/ /usr/share/nginx/html/petclinic/dist
        chdir: ./spring-petclinic-angular
    
    - name: Setup Nginx configuration
      shell:
        cmd: sed -i 's/http {/http {upstream backend {server {{ backend1_ip }}:{{ backend1_port }}; server {{ backend2_ip }}:{{ backend2_port }};} server {listen 80; location \/petclinic\/ {alias \/usr\/share\/nginx\/html\/petclinic\/dist\/;try_files $uri$args $uri$args\/ \/petclinic\/index.html;} location \/petclinic\/api\/ {proxy_pass http:\/\/backend;}}/' /etc/nginx/nginx.conf

    - name: Comment unused sites
      shell: sed -e 's/^#*/#/' -i /etc/nginx/sites-enabled/default
    
    - name: Nginx reload
      shell: nginx -s reload

    - name: Display URL
      debug:
        msg: "http://{{ frontend_ip }}/petclinic"
